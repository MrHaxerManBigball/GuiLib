if getgenv().executed then return error("Already Executed") end 
getgenv().executed = true
local guiLib = {}
getgenv().testing = guiLib
guiLib.moduletable = {}
local Players = game:GetService("Players") 
local uis = game:GetService("UserInputService")
local http = game:GetService("HttpService")
function code(b) 
	b() 
end 
local binds = {
	["TestFly"] = Enum.KeyCode.B,
	["KillAura"] = Enum.KeyCode.Z,
	["Speed"] = Enum.KeyCode.V,
	["HighJump"] = Enum.KeyCode.H,
	["FPSDestroyer"] = Enum.KeyCode.Y,
	["Fly"] = Enum.KeyCode.X, 
	["Nuker"] = Enum.KeyCode.P, 
	["ChestStealer"] = Enum.KeyCode.M,
	["LongJump"] = Enum.KeyCode.G,
}
if not getgenv().lplr then getgenv().lplr = Players.LocalPlayer end 
guiLib.isAlive = function(plr)
	return plr and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Humanoid") and plr.Character:FindFirstChild("Humanoid").Health > 0 
end
guiLib.enabled = function(module)
	return ModuleOn[tostring(module)] or false 
end 
guiLib.isTeammate =  function(plr) 
	return plr.Team == lplr.Team and lplr.Team
end
guiLib.functions = {}
local returnedFunc
function getModuleFunc(moduletofunc)
	for i,v in next, guiLib.functions do 
		for i2,v2 in next, v do 
			if v.Name == moduletofunc then 
				returnedFunc = v["Function"]
				break
			end
		end 
	end
	return returnedFunc
end
local mouse = lplr:GetMouse()
guiLib.Boney = Instance.new("ScreenGui")
local TextButton = Instance.new("TextButton")
guiLib.Boney.Name = http:GenerateGUID(false)
guiLib.Boney.Parent = lplr:WaitForChild("PlayerGui", 9e9)
guiLib.Boney.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
guiLib.Boney.ResetOnSpawn = false
guiLib.unj = uis.InputBegan:Connect(function(input) 
	if input.KeyCode == Enum.KeyCode.RightShift then 
		guiLib.Boney.Enabled = not guiLib.Boney.Enabled
	end 
end) 
local WorldWindow = Instance.new("TextLabel")
WorldWindow.Name = "WorldWindow"
WorldWindow.Parent = guiLib.Boney
WorldWindow.BackgroundColor3 = Color3.fromRGB(111, 128, 200)
WorldWindow.BackgroundTransparency = 0.3
WorldWindow.Position = UDim2.new(0.0308897775, 0, 0.0302419364, 0)
WorldWindow.Size = UDim2.new(0, 200, 0, 50)
WorldWindow.Font = Enum.Font.Highway
WorldWindow.Text = "World"
WorldWindow.TextColor3 = Color3.fromRGB(0, 0, 0)
WorldWindow.TextSize = 25
WorldWindow.Active = true 
WorldWindow.Draggable = true 
WorldWindow.BorderSizePixel = 0 
local CombatWindow = Instance.new("TextLabel")
CombatWindow.Name = "CombatWindow"
CombatWindow.Parent = guiLib.Boney
CombatWindow.BackgroundColor3 = Color3.fromRGB(111, 128, 200)
CombatWindow.BackgroundTransparency = 0.3
CombatWindow.Position = UDim2.new(WorldWindow.Position) + UDim2.new(0.15,0,0.031)
CombatWindow.Size = UDim2.new(0, 200, 0, 50)
CombatWindow.Font = Enum.Font.Highway
CombatWindow.Text = "Combat"
CombatWindow.TextColor3 = Color3.fromRGB(0, 0, 0)
CombatWindow.TextSize = 25
CombatWindow.Active = true 
CombatWindow.Draggable = true 
CombatWindow.BorderSizePixel = 0 
local UtilityWindow = Instance.new("TextLabel")
UtilityWindow.Name = "UtilityWindow"
UtilityWindow.Parent = guiLib.Boney
UtilityWindow.BackgroundColor3 = Color3.fromRGB(111, 128, 200)
UtilityWindow.BackgroundTransparency = 0.3
UtilityWindow.Position = UDim2.new(WorldWindow.Position) + UDim2.new(0.3,0,0.031)
UtilityWindow.Size = UDim2.new(0, 200, 0, 50)
UtilityWindow.Font = Enum.Font.Highway
UtilityWindow.Text = "Utility"
UtilityWindow.TextColor3 = Color3.fromRGB(0, 0, 0)
UtilityWindow.TextSize = 25
UtilityWindow.Active = true 
UtilityWindow.Draggable = true 
UtilityWindow.BorderSizePixel = 0 
local MovementWindow = Instance.new("TextLabel")
MovementWindow.Name = "MovementWindow"
MovementWindow.Parent = guiLib.Boney
MovementWindow.BackgroundColor3 = Color3.fromRGB(111, 128, 200)
MovementWindow.BackgroundTransparency = 0.3
MovementWindow.Position = UDim2.new(WorldWindow.Position) + UDim2.new(0.45,0,0,40)
MovementWindow.Size = UDim2.new(0, 200, 0, 50)
MovementWindow.Font = Enum.Font.Highway
MovementWindow.Text = "Movement"
MovementWindow.TextColor3 = Color3.fromRGB(0, 0, 0)
MovementWindow.TextSize = 25
MovementWindow.Active = true 
MovementWindow.Draggable = true
MovementWindow.BorderSizePixel = 0 
local RenderWindow = Instance.new("TextLabel")
RenderWindow.Name = "RenderWindow"
RenderWindow.Parent = guiLib.Boney
RenderWindow.BackgroundColor3 = Color3.fromRGB(111, 128, 200)
RenderWindow.BackgroundTransparency = 0.3
RenderWindow.Position = UDim2.new(WorldWindow.Position) + UDim2.new(0.6,0,0,49)
RenderWindow.Size = UDim2.new(0, 200, 0, 50)
RenderWindow.Font = Enum.Font.Highway
RenderWindow.Text = "Render"
RenderWindow.TextColor3 = Color3.fromRGB(0, 0, 0)
RenderWindow.TextSize = 25
RenderWindow.Active = true 
RenderWindow.Draggable = true 
RenderWindow.BorderSizePixel = 0 
ModuleAmmount = {"Ammount" == 0}
ModuleOn = {"On" == false}
guiLib.DropDownValue = {"Value" == 0}
if not ModuleAmmount.WorldWindow then 
	ModuleAmmount.WorldWindow = 0
end 
if not ModuleAmmount.CombatWindow then 
	ModuleAmmount.CombatWindow = 0
end 
if not ModuleAmmount.UtilityWindow then 
	ModuleAmmount.UtilityWindow = 0
end 
if not ModuleAmmount.MovementWindow then 
	ModuleAmmount.MovementWindow = 0
end 
if not ModuleAmmount.RenderWindow then 
	ModuleAmmount.RenderWindow = 0 
end 
guiLib.disconnectfuncs = {}
local connection1, connection2, connection3, connection4, realwindow
guiLib.createmodule = function(tbl)
	realwindow = nil
	table.insert(guiLib.moduletable, tbl["Name"])
	table.insert(guiLib.functions, tbl)
	if tbl["Window"] == "World" then
		realwindow = WorldWindow
	elseif tbl["Window"] == "Combat" then
		realwindow = CombatWindow 
	elseif tbl["Window"] == "Utility" then 
		realwindow = UtilityWindow
	elseif tbl["Window"] == "Movement" then 
		realwindow = MovementWindow 
	elseif tbl["Window"] == "Render" then 
		realwindow = RenderWindow
	end 
	ModuleAmmount[realwindow.Name] += 1
	--local corner = Instance.new("UICorner", realwindow  or WorldWindow)
	local module = Instance.new("TextButton", realwindow or WorldWindow)
	--corner:Clone().Parent = module
	module.BackgroundColor3 = Color3.fromRGB(36, 38, 42)
	module.BackgroundTransparency = 0.5
	module.Position = UDim2.new(realwindow.Position) + UDim2.new(0,0,1 * ModuleAmmount[realwindow.Name])
	module.Size = UDim2.new(0, 200, 0, 50)
	module.Font = Enum.Font.SourceSans
	module.TextStrokeColor3 = Color3.fromRGB(255, 0, 255)
	module.TextColor3 = Color3.fromRGB(255, 255, 255)
	module.TextSize = 18
	module.TextXAlignment = "Left"
	module.Text = " "..tostring(tbl["Name"])
	module.TextTransparency = 0 
	module.BorderSizePixel = 0 
	if not ModuleOn[tbl["Name"]] then 
        --[[
            if isfile("testlib/config/"..name..".txt") then
            ModuleOn[name] = readfile("testlib/config/"..name..".txt")
            if ModuleOn[name] == "true" then enable(name) moduletable[name] = true end 
            print(name,ModuleOn[name])
        else 
            ModuleOn[name] = false
            moduletable[name] = false
        end]]
		ModuleOn[tbl["Name"]] = false
	end
	if tbl["Dropdown"] then 
		print(tbl["Name"])
		local dropdown2 = Instance.new("TextBox", realwindow) 
		--corner:Clone().Parent = dropdown2
		dropdown2.Position = UDim2.new(module.Position) + UDim2.new(0.225,0.3,1.05) 
		dropdown2.TextSize = 10
		dropdown2.BackgroundTransparency = 1 
		dropdown2.TextTransparency = 1
		dropdown2.TextEditable = false 
		dropdown2.LayoutOrder = 0
		dropdown2.Size = UDim2.new(0,0,0)
		if not guiLib.DropDownValue[tbl["Name"]] then 
			guiLib.DropDownValue[tbl["Name"]] = 0 
		end
		connection1 = dropdown2:GetPropertyChangedSignal("Text"):Connect(function(balling) 
			table.insert(guiLib.disconnectfuncs, connection1)
			pcall(function()
				guiLib.DropDownValue[tbl["Name"]] = dropdown2.Text
				if dropdown2 and tbl["Dropdown"] and tbl["Dropdown"]["Min"] and tonumber(dropdown2.Text) < tbl["Dropdown"]["Min"] then 
					dropdown2.Text = tbl["Dropdown"]["Min"]
					guiLib.DropDownValue[tbl["Name"]] = tbl["Dropdown"]["Min"]
				elseif dropdown2 and tbl["Dropdown"] and tbl["Dropdown"]["Max"] and tonumber(dropdown2.Text) > tonumber(tbl["Dropdown"]["Max"]) then
					dropdown2.Text = tbl["Dropdown"]["Max"]
					guiLib.DropDownValue[tbl["Name"]] = tbl["Dropdown"]["Max"]
				end 
			end)
		end) 
		connection2 = module.MouseButton2Down:Connect(function(right) 
			table.insert(guiLib.disconnectfuncs, connection2)
			if dropdown2.TextEditable then 
				dropdown2.BackgroundTransparency = 1 
				dropdown2.TextTransparency = 1
				dropdown2.TextEditable = false  
				dropdown2.Selectable = false 
				module.TextSize = 18
				dropdown2.Size = UDim2.new(0,0,0)
			else 
				dropdown2.Text = guiLib.DropDownValue[tbl["Name"]] or "Empty"
				dropdown2.BackgroundTransparency = 0 
				dropdown2.TextTransparency = 0
				dropdown2.TextEditable = true 
				dropdown2.Selectable = true
				module.TextSize = 15
				dropdown2.Size = UDim2.new(0,123,0,50) 
			end 
		end) 
	end 
	connection3 = uis.InputBegan:Connect(function(input) 
		table.insert(guiLib.disconnectfuncs, connection3)
		if input.KeyCode == binds[tbl["Name"]] and not uis:GetFocusedTextBox() then 
			if ModuleOn[tbl["Name"]] then 
				ModuleOn[tbl["Name"]] = false 
				guiLib.notify(tbl["Name"], "Disabled", 1)
				--writefile("testlib/config/"..name..".txt", "false")
				module.TextSize = 18
				module.BackgroundColor3 = Color3.fromRGB(36, 38, 42)
				task.spawn(function()
					code(tbl["Function"])
				end)
			else 
				ModuleOn[tbl["Name"]] = true 
				guiLib.notify(tbl["Name"], "Enabled", 1)
				--writefile("testlib/config/"..name..".txt", "true")
				module.BackgroundColor3 = Color3.fromRGB(83, 33, 153)
				task.spawn(function()
					code(tbl["Function"])
				end)
			end 
		end 
	end) 
	task.spawn(function()
		module.MouseButton1Down:Connect(tbl["Function"]) 
	end)
	connection4 = module.MouseButton1Down:Connect(function(func) 
		table.insert(guiLib.disconnectfuncs, connection4)
		if ModuleOn[tbl["Name"]] then 
			ModuleOn[tbl["Name"]] = false 
			guiLib.notify(tbl["Name"], "Disabled", 1)
			module.BackgroundColor3 = Color3.fromRGB(36, 38, 42)
		else 
			ModuleOn[tbl["Name"]] = true 
			guiLib.notify(tbl["Name"], "Enabled", 1)
			module.BackgroundColor3 = Color3.fromRGB(83, 33, 153)
		end 
	end) 
end 

guiLib.disable = function(disablemodule)
	if ModuleOn[disablemodule] and disablemodule ~= "Uninject" then 
		ModuleOn[disablemodule] = false 
		for i,v in next, guiLib.Boney:GetDescendants() do 
			if v:IsA("TextButton") and v.Text == " "..disablemodule then 
				v.BackgroundColor3 = Color3.fromRGB(36, 38, 42)
				guiLib.notify(disablemodule, "Disabled", 1)
				--writefile("testlib/config/"..disablemodule..".txt", "false")
				guiLib.moduletable[disablemodule] = false
				code(getModuleFunc(disablemodule))
				break
			end 
		end 
	end 
end
guiLib.enable = function(enabledmodule)
	if  ModuleOn[enabledmodule] then 
		ModuleOn[enabledmodule] = true 
		for i,v in next, guiLib.Boney:GetDescendants() do 
			if v:IsA("TextButton") and v.Text == " "..enabledmodule then 
				v.BackgroundColor3 = Color3.fromRGB(83, 33, 153)
				guiLib.notify(enabledmodule, "Enabled", 1)
				--writefile("testlib/config/"..enabledmodule..".txt", "true")
				guiLib.moduletable[enabledmodule] = true
				code(getModuleFunc(enabledmodule))
				break
			end 
		end 
	end 
end 
local notifications = 0
guiLib.notify = function(header, text, time, tweentime) 
	task.spawn(function() 
		notifications += 1 
		local Notification = Instance.new("ScreenGui")
		local Frame = Instance.new("Frame")
		local Header = Instance.new("TextLabel")
		local Bottomtext = Instance.new("TextLabel")
		Notification.Name = "Notification"
		Notification.Parent = lplr:WaitForChild("PlayerGui", 9e9)
		Notification.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		Frame.Parent = Notification
		Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Frame.BackgroundTransparency = 0.6
		Frame.Position = UDim2.new(0.897371888, 0, 0.917338729, 0)
		Frame.Size = UDim2.new(0, 270, 0, 114)
		Header.Name = header or "Header"
		Header.Parent = Frame
		Header.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Header.Position = UDim2.new(-0.00371747208, 0, 0, 0)
		Header.Size = UDim2.new(0, 270, 0, 39)
		Header.Font = Enum.Font.SourceSans
		Header.Text = header or "Header"
		Header.TextColor3 = Color3.fromRGB(0, 0, 0)
		Header.TextSize = 25

		Bottomtext.Name = "Bottom text"
		Bottomtext.Parent = Frame
		Bottomtext.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Bottomtext.BackgroundTransparency = 1.000
		Bottomtext.Position = UDim2.new(0, 0, 0.342105269, 0)
		Bottomtext.Size = UDim2.new(0, 268, 0, 75)
		Bottomtext.Font = Enum.Font.SourceSans
		Bottomtext.Text = text or "Texet"
		Bottomtext.TextColor3 = Color3.fromRGB(0, 0, 0)
		Bottomtext.TextSize = 25
		Bottomtext.TextXAlignment = Enum.TextXAlignment.Left
		Bottomtext.TextYAlignment = Enum.TextYAlignment.Top
		Frame:TweenPosition(UDim2.new(0.85,0.1,0.8 - (notifications / 11.65),0.4), Enum.EasingDirection.Out, Enum.EasingStyle.Linear, tweentime or 0.1, false) 
		task.wait(time) 
		Frame:TweenPosition(UDim2.new(0.897371888, 0, 0.917338729, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Linear, tweentime or 0.1, false)
		task.wait(0.1)
		notifications -= 1 
		Notification:Destroy()
	end)
end

return guiLib
